import java.io.*;
import java.util.*;
import java.nio.file.*;
import java.time.*;
import java.time.temporal.*;
public class q2 extends q1{
	public List<String> readTextFileByLines(String fileName) throws IOException {
		List<String> lines = Files.readAllLines(Paths.get(fileName));
		return lines;
	}
	int search(String girlfriend, Girls []g) {
		for (int i=0; i<g.length; i++) {
			if (g[i].name.equals(girlfriend)) return i;
		}
		return 0;
	}
	public void giftify(Boys []b, Girls []g, Happyfy harr[]) throws IOException {
		int i, j=0;
		DataOutputStream d_stream = new DataOutputStream(new FileOutputStream("log1.txt"));
		for (i=0; i<b.length; i++) {
			if (b[i].committed == true) {
				double s_Val = 0, s_cost = 0;
				while (s_cost <= b[i].maintainencebudget) {
					List<String> gift = readTextFileByLines("Gifts.txt");
					Object arrgift[] = gift.toArray();
					for (int k=0; k<arrgift.length; k++) {
						String str = arrgift[k].toString();
						if (str.length() == 0) {                            
							continue;
						}
						String s_ar[] = str.split(",");
						s_Val = s_Val + Double.parseDouble(s_ar[2]);
						s_cost = s_cost + Double.parseDouble(s_ar[3]);
						d_stream.writeBytes(b[i].name+" gifts "+s_ar[4]+" to "+b[i].girlfriend+" on "+LocalDate.now()+" "+LocalTime.now()+"\n");
					}
				}
				harr[j++] = new Happyfy(b[i].name, g[idx].name, b[i].happiness + g[idx].happiness);
			}
		}
	}
	q2() throws IOException{
		int nb;
		int ng;
		int k;
		int z;
		int nhc;
		nb = 7; ng = 5; k = 0; z = 0; nhc = 3; 
		Boys b[] = new Boys[nb];
		Girls g[] = new Girls[ng];
		Happyfy harr[] = new Happyfy[ng];	
		List<String> alb = readTextFileByLines("Boys_data.txt"); 
		Object arrb[] = alb.toArray(); 
		List<String> a_l_g = readTextFileByLines("Girls_data.txt"); 
		Object arrg[] = a_l_g.toArray();
		for (int i=0; i<arrg.length; i++) {
			String str = arrg[i].toString();
			if (str.length() == 0) {
				continue;
			}
			String s_ar[] = str.split(",");
			g[z++] = new Girls(s_ar);
		}
		couplify(b, g);
		giftify(b, g, harr);
		for (int i=0; i<ng-1; i++) {
			for (int j=0; j<ng-1-i; j++) {
				if (harr[j].happiness < harr[j+1].happiness) {
					String t_bf = harr[j].boyfriend;
					String t_gf = harr[j].girlfriend;
					double temphap = harr[j].happiness;
					harr[j].boyfriend = harr[j+1].boyfriend;
					harr[j].girlfriend = harr[j+1].girlfriend;
					harr[j].happiness = harr[j+1].happiness;
					harr[j+1].boyfriend = t_bf;
					harr[j+1].girlfriend = t_gf;
					harr[j+1].happiness = temphap;
				}
			}
		}	
                DataOutputStream d_stream = new DataOutputStream(new FileOutputStream("log2.txt"));
		d_stream.writeBytes("Happiest "+nhc+" couples are\n");
		for (int i=0; i<nhc; i++) {
			d_stream.writeBytes(harr[i].boyfriend+" and "+harr[i].girlfriend+"\n");
		}
	}
}