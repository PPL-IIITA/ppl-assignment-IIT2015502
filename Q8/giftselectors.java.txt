import java.io.*;
import java.util.*;
import java.nio.file.*;
import java.time.*;
import java.time.temporal.*;
public class GiftSelector {
	public List<String> readTextFileByLines(String fileName) throws IOException {
		List<String> lines = Files.readAllLines(Paths.get(fileName));
		return lines;
	}
	public int search(String girlfriend, Girls []g)
	 {for (int i=0; i<g.length; i++) {
			if (g[i].name.equals(girlfriend)) return i;
		}
		return 0;
	}
	public void giftifyoptimized(Boys []b, Girls []g, Happyfy harray[]) throws IOException {
		int i, j=0;
		DataOutputStream dos = new DataOutputStream(new FileOutputStream("log1.txt"));
		for (i=0; i<b.length; i++) 
            {
			if (b[i].committed == true)
			 {
				double s_val = 0;
                double scost = 0;
				while (scost <= b[i].m_udget) {
					List<String> gift = readTextFileByLines("Gifts.txt");
					Object agft[] = gift.toArray();
					for (int k=0; k<agft.length; k++) {
						String str = agft[k].toString();
						if (str.length() == 0) {                            
							continue;
						}String arr[] = str.split(",");
						s_val = s_val + Double.parseDouble(arr[2]);scost = scost + Double.parseDouble(arr[3]);
						dos.writeBytes(b[i].name+" gifts "+arr[4]+" to "+b[i].girlfriend+" on "+LocalDate.now()+" "+LocalTime.now()+"\n");
					}
				}
				int indices = search(b[i].girlfriend, g);
				if (g[indices].type.equals("normal"))g[indices].h_ness = b[i].m_udget-scost;
				else if (g[indices].type.equals("choosy"))g[indices].h_ness = Math.log(scost);
				else 	g[indices].h_ness = Math.exp(scost);
				harray[j++] = new Happyfy(b[i].name, g[indices].name, b[i].h_ness + g[indices].h_ness);
			}
		}
	}
}